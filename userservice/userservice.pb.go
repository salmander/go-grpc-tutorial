// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userservice.proto

package userservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CustomerByIdRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerByIdRequest) Reset()         { *m = CustomerByIdRequest{} }
func (m *CustomerByIdRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerByIdRequest) ProtoMessage()    {}
func (*CustomerByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{0}
}

func (m *CustomerByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerByIdRequest.Unmarshal(m, b)
}
func (m *CustomerByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerByIdRequest.Marshal(b, m, deterministic)
}
func (m *CustomerByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerByIdRequest.Merge(m, src)
}
func (m *CustomerByIdRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerByIdRequest.Size(m)
}
func (m *CustomerByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerByIdRequest proto.InternalMessageInfo

func (m *CustomerByIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CustomerByUuidRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerByUuidRequest) Reset()         { *m = CustomerByUuidRequest{} }
func (m *CustomerByUuidRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerByUuidRequest) ProtoMessage()    {}
func (*CustomerByUuidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{1}
}

func (m *CustomerByUuidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerByUuidRequest.Unmarshal(m, b)
}
func (m *CustomerByUuidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerByUuidRequest.Marshal(b, m, deterministic)
}
func (m *CustomerByUuidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerByUuidRequest.Merge(m, src)
}
func (m *CustomerByUuidRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerByUuidRequest.Size(m)
}
func (m *CustomerByUuidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerByUuidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerByUuidRequest proto.InternalMessageInfo

func (m *CustomerByUuidRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CustomerByEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerByEmailRequest) Reset()         { *m = CustomerByEmailRequest{} }
func (m *CustomerByEmailRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerByEmailRequest) ProtoMessage()    {}
func (*CustomerByEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{2}
}

func (m *CustomerByEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerByEmailRequest.Unmarshal(m, b)
}
func (m *CustomerByEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerByEmailRequest.Marshal(b, m, deterministic)
}
func (m *CustomerByEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerByEmailRequest.Merge(m, src)
}
func (m *CustomerByEmailRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerByEmailRequest.Size(m)
}
func (m *CustomerByEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerByEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerByEmailRequest proto.InternalMessageInfo

func (m *CustomerByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CustomerByNectarRequest struct {
	NectarCard           string   `protobuf:"bytes,1,opt,name=nectar_card,json=nectarCard,proto3" json:"nectar_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerByNectarRequest) Reset()         { *m = CustomerByNectarRequest{} }
func (m *CustomerByNectarRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerByNectarRequest) ProtoMessage()    {}
func (*CustomerByNectarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{3}
}

func (m *CustomerByNectarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerByNectarRequest.Unmarshal(m, b)
}
func (m *CustomerByNectarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerByNectarRequest.Marshal(b, m, deterministic)
}
func (m *CustomerByNectarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerByNectarRequest.Merge(m, src)
}
func (m *CustomerByNectarRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerByNectarRequest.Size(m)
}
func (m *CustomerByNectarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerByNectarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerByNectarRequest proto.InternalMessageInfo

func (m *CustomerByNectarRequest) GetNectarCard() string {
	if m != nil {
		return m.NectarCard
	}
	return ""
}

type Customer struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	NectarCard           string   `protobuf:"bytes,6,opt,name=nectar_card,json=nectarCard,proto3" json:"nectar_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{4}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Customer) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Customer) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Customer) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetNectarCard() string {
	if m != nil {
		return m.NectarCard
	}
	return ""
}

func init() {
	proto.RegisterType((*CustomerByIdRequest)(nil), "userservice.CustomerByIdRequest")
	proto.RegisterType((*CustomerByUuidRequest)(nil), "userservice.CustomerByUuidRequest")
	proto.RegisterType((*CustomerByEmailRequest)(nil), "userservice.CustomerByEmailRequest")
	proto.RegisterType((*CustomerByNectarRequest)(nil), "userservice.CustomerByNectarRequest")
	proto.RegisterType((*Customer)(nil), "userservice.Customer")
}

func init() { proto.RegisterFile("userservice.proto", fileDescriptor_68a7ca558839fd2b) }

var fileDescriptor_68a7ca558839fd2b = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0x5d, 0xdd, 0xc6, 0x76, 0x07, 0xca, 0xee, 0x9c, 0x0e, 0x45, 0x1c, 0x51, 0x41, 0x10,
	0xf6, 0xa0, 0x6f, 0x3e, 0x3a, 0x44, 0x04, 0x19, 0x52, 0xdd, 0xf3, 0x88, 0xeb, 0x15, 0x02, 0xeb,
	0xaa, 0xf9, 0x23, 0xf8, 0x71, 0xfc, 0x54, 0x7e, 0x1d, 0x69, 0xba, 0xb6, 0x69, 0x59, 0xde, 0x9a,
	0x73, 0x4f, 0x7e, 0x3d, 0xe4, 0x5c, 0xe8, 0x1b, 0x45, 0x52, 0x91, 0xfc, 0x16, 0x4b, 0x9a, 0x7c,
	0xca, 0x44, 0x27, 0xd8, 0x73, 0x24, 0x76, 0x09, 0x83, 0xa9, 0x51, 0x3a, 0x89, 0x49, 0xde, 0xff,
	0x3c, 0x45, 0x21, 0x7d, 0x19, 0x52, 0x1a, 0xf7, 0x20, 0x10, 0xd1, 0xa8, 0x31, 0x6e, 0x5c, 0xb5,
	0xc2, 0x40, 0x44, 0xec, 0x1a, 0x86, 0xa5, 0x6d, 0x6e, 0x44, 0x61, 0x44, 0x68, 0x1a, 0xb3, 0xb1,
	0x76, 0x43, 0xfb, 0xcd, 0x26, 0x70, 0x58, 0x9a, 0x1f, 0x62, 0x2e, 0x56, 0xb9, 0xfb, 0x00, 0x5a,
	0x94, 0x9e, 0x37, 0xf6, 0xec, 0xc0, 0xee, 0xe0, 0xa8, 0xf4, 0xcf, 0x68, 0xa9, 0xb9, 0xcc, 0x2f,
	0x9c, 0x41, 0x6f, 0x6d, 0x85, 0xc5, 0x92, 0xcb, 0xfc, 0x2f, 0x90, 0x49, 0x53, 0x2e, 0x23, 0xf6,
	0xdb, 0x80, 0x4e, 0x7e, 0xb9, 0x9e, 0xba, 0x08, 0x17, 0x94, 0xe1, 0xf0, 0x14, 0xe0, 0x43, 0x48,
	0xa5, 0x17, 0x6b, 0x1e, 0xd3, 0x68, 0xd7, 0x4e, 0xba, 0x56, 0x99, 0xf1, 0x98, 0xf0, 0x04, 0xba,
	0x2b, 0x9e, 0x4f, 0x9b, 0x76, 0xda, 0x49, 0x05, 0x3b, 0x2c, 0xe2, 0xb7, 0x9c, 0xf8, 0xf5, 0x8c,
	0xed, 0x7a, 0xc6, 0x9b, 0xbf, 0x00, 0x7a, 0x73, 0x45, 0xf2, 0x35, 0x7b, 0x73, 0x7c, 0x86, 0xfd,
	0x47, 0xd2, 0xee, 0xb3, 0xe3, 0x78, 0xe2, 0xf6, 0xb4, 0xa5, 0x91, 0xe3, 0xe1, 0x56, 0x07, 0xdb,
	0xc1, 0x17, 0xe8, 0x57, 0x68, 0x69, 0x3b, 0xc8, 0x3c, 0x3c, 0xa7, 0x3a, 0x3f, 0x31, 0x04, 0xac,
	0x10, 0x6d, 0x85, 0x78, 0xee, 0x41, 0xba, 0x05, 0xfb, 0x99, 0x6f, 0x30, 0xa8, 0x30, 0xb3, 0x9a,
	0xf1, 0xc2, 0x03, 0xad, 0x6c, 0x81, 0x97, 0xfa, 0xde, 0xb6, 0x1b, 0x7d, 0xfb, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0xea, 0xee, 0x7f, 0x5d, 0xe6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetCustomerById(ctx context.Context, in *CustomerByIdRequest, opts ...grpc.CallOption) (*Customer, error)
	GetCustomerByUuid(ctx context.Context, in *CustomerByUuidRequest, opts ...grpc.CallOption) (*Customer, error)
	GetCustomerByEmail(ctx context.Context, in *CustomerByEmailRequest, opts ...grpc.CallOption) (*Customer, error)
	GetCustomerByNectar(ctx context.Context, in *CustomerByNectarRequest, opts ...grpc.CallOption) (*Customer, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetCustomerById(ctx context.Context, in *CustomerByIdRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetCustomerById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetCustomerByUuid(ctx context.Context, in *CustomerByUuidRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetCustomerByUuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetCustomerByEmail(ctx context.Context, in *CustomerByEmailRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetCustomerByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetCustomerByNectar(ctx context.Context, in *CustomerByNectarRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetCustomerByNectar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetCustomerById(context.Context, *CustomerByIdRequest) (*Customer, error)
	GetCustomerByUuid(context.Context, *CustomerByUuidRequest) (*Customer, error)
	GetCustomerByEmail(context.Context, *CustomerByEmailRequest) (*Customer, error)
	GetCustomerByNectar(context.Context, *CustomerByNectarRequest) (*Customer, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetCustomerById(ctx context.Context, req *CustomerByIdRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerById not implemented")
}
func (*UnimplementedUserServiceServer) GetCustomerByUuid(ctx context.Context, req *CustomerByUuidRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerByUuid not implemented")
}
func (*UnimplementedUserServiceServer) GetCustomerByEmail(ctx context.Context, req *CustomerByEmailRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerByEmail not implemented")
}
func (*UnimplementedUserServiceServer) GetCustomerByNectar(ctx context.Context, req *CustomerByNectarRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerByNectar not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetCustomerById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetCustomerById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetCustomerById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetCustomerById(ctx, req.(*CustomerByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetCustomerByUuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerByUuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetCustomerByUuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetCustomerByUuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetCustomerByUuid(ctx, req.(*CustomerByUuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetCustomerByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetCustomerByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetCustomerByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetCustomerByEmail(ctx, req.(*CustomerByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetCustomerByNectar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerByNectarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetCustomerByNectar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetCustomerByNectar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetCustomerByNectar(ctx, req.(*CustomerByNectarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userservice.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCustomerById",
			Handler:    _UserService_GetCustomerById_Handler,
		},
		{
			MethodName: "GetCustomerByUuid",
			Handler:    _UserService_GetCustomerByUuid_Handler,
		},
		{
			MethodName: "GetCustomerByEmail",
			Handler:    _UserService_GetCustomerByEmail_Handler,
		},
		{
			MethodName: "GetCustomerByNectar",
			Handler:    _UserService_GetCustomerByNectar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userservice.proto",
}
