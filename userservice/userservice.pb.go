// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userservice.proto

package userservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserByIdRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserByIdRequest) Reset()         { *m = UserByIdRequest{} }
func (m *UserByIdRequest) String() string { return proto.CompactTextString(m) }
func (*UserByIdRequest) ProtoMessage()    {}
func (*UserByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{0}
}

func (m *UserByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserByIdRequest.Unmarshal(m, b)
}
func (m *UserByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserByIdRequest.Marshal(b, m, deterministic)
}
func (m *UserByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserByIdRequest.Merge(m, src)
}
func (m *UserByIdRequest) XXX_Size() int {
	return xxx_messageInfo_UserByIdRequest.Size(m)
}
func (m *UserByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserByIdRequest proto.InternalMessageInfo

func (m *UserByIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserByUuidRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserByUuidRequest) Reset()         { *m = UserByUuidRequest{} }
func (m *UserByUuidRequest) String() string { return proto.CompactTextString(m) }
func (*UserByUuidRequest) ProtoMessage()    {}
func (*UserByUuidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{1}
}

func (m *UserByUuidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserByUuidRequest.Unmarshal(m, b)
}
func (m *UserByUuidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserByUuidRequest.Marshal(b, m, deterministic)
}
func (m *UserByUuidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserByUuidRequest.Merge(m, src)
}
func (m *UserByUuidRequest) XXX_Size() int {
	return xxx_messageInfo_UserByUuidRequest.Size(m)
}
func (m *UserByUuidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserByUuidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserByUuidRequest proto.InternalMessageInfo

func (m *UserByUuidRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type UserByEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserByEmailRequest) Reset()         { *m = UserByEmailRequest{} }
func (m *UserByEmailRequest) String() string { return proto.CompactTextString(m) }
func (*UserByEmailRequest) ProtoMessage()    {}
func (*UserByEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{2}
}

func (m *UserByEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserByEmailRequest.Unmarshal(m, b)
}
func (m *UserByEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserByEmailRequest.Marshal(b, m, deterministic)
}
func (m *UserByEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserByEmailRequest.Merge(m, src)
}
func (m *UserByEmailRequest) XXX_Size() int {
	return xxx_messageInfo_UserByEmailRequest.Size(m)
}
func (m *UserByEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserByEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserByEmailRequest proto.InternalMessageInfo

func (m *UserByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type UserByNectarRequest struct {
	NectarCard           string   `protobuf:"bytes,1,opt,name=nectar_card,json=nectarCard,proto3" json:"nectar_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserByNectarRequest) Reset()         { *m = UserByNectarRequest{} }
func (m *UserByNectarRequest) String() string { return proto.CompactTextString(m) }
func (*UserByNectarRequest) ProtoMessage()    {}
func (*UserByNectarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{3}
}

func (m *UserByNectarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserByNectarRequest.Unmarshal(m, b)
}
func (m *UserByNectarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserByNectarRequest.Marshal(b, m, deterministic)
}
func (m *UserByNectarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserByNectarRequest.Merge(m, src)
}
func (m *UserByNectarRequest) XXX_Size() int {
	return xxx_messageInfo_UserByNectarRequest.Size(m)
}
func (m *UserByNectarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserByNectarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserByNectarRequest proto.InternalMessageInfo

func (m *UserByNectarRequest) GetNectarCard() string {
	if m != nil {
		return m.NectarCard
	}
	return ""
}

type User struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	NectarCard           string   `protobuf:"bytes,6,opt,name=nectar_card,json=nectarCard,proto3" json:"nectar_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_68a7ca558839fd2b, []int{4}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetNectarCard() string {
	if m != nil {
		return m.NectarCard
	}
	return ""
}

func init() {
	proto.RegisterType((*UserByIdRequest)(nil), "userservice.UserByIdRequest")
	proto.RegisterType((*UserByUuidRequest)(nil), "userservice.UserByUuidRequest")
	proto.RegisterType((*UserByEmailRequest)(nil), "userservice.UserByEmailRequest")
	proto.RegisterType((*UserByNectarRequest)(nil), "userservice.UserByNectarRequest")
	proto.RegisterType((*User)(nil), "userservice.User")
}

func init() { proto.RegisterFile("userservice.proto", fileDescriptor_68a7ca558839fd2b) }

var fileDescriptor_68a7ca558839fd2b = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x4f, 0x83, 0x40,
	0x14, 0xc4, 0x05, 0xa1, 0x91, 0x47, 0x6c, 0xc3, 0xd3, 0x43, 0xe3, 0xdf, 0xba, 0x17, 0x8d, 0x87,
	0x1e, 0x34, 0xf1, 0x6c, 0xd4, 0xfa, 0xe7, 0xd2, 0x03, 0xa6, 0xe7, 0x66, 0x85, 0x67, 0xb2, 0x49,
	0x69, 0x75, 0x01, 0x13, 0x3f, 0x8c, 0x67, 0xbf, 0xa6, 0x61, 0xb7, 0xac, 0x2b, 0xee, 0x8d, 0x9d,
	0x19, 0x7e, 0x19, 0x76, 0x80, 0xa4, 0x2e, 0x49, 0x96, 0x24, 0x3f, 0x44, 0x46, 0xe3, 0x37, 0xb9,
	0xaa, 0x56, 0x18, 0x5b, 0x12, 0x3b, 0x81, 0xc1, 0xac, 0x24, 0x79, 0xf3, 0xf9, 0x94, 0xa7, 0xf4,
	0x5e, 0x53, 0x59, 0x61, 0x1f, 0x7c, 0x91, 0x0f, 0xbd, 0x91, 0x77, 0x16, 0xa6, 0xbe, 0xc8, 0xd9,
	0x29, 0x24, 0x3a, 0x32, 0xab, 0x85, 0x09, 0x21, 0x04, 0x75, 0xbd, 0x8e, 0x45, 0xa9, 0x7a, 0x66,
	0xe7, 0x80, 0x3a, 0x38, 0x29, 0xb8, 0x58, 0xb4, 0xc9, 0x5d, 0x08, 0xa9, 0x39, 0xaf, 0xa3, 0xfa,
	0xc0, 0xae, 0x60, 0x47, 0x67, 0xa7, 0x94, 0x55, 0x5c, 0xb6, 0xe1, 0x63, 0x88, 0x97, 0x4a, 0x98,
	0x67, 0x5c, 0xb6, 0x74, 0xd0, 0xd2, 0x2d, 0x97, 0x39, 0xfb, 0xf2, 0x20, 0x68, 0x5e, 0xec, 0xb6,
	0x34, 0x85, 0xfc, 0xdf, 0x42, 0x78, 0x08, 0xf0, 0x2a, 0x64, 0x59, 0xcd, 0x97, 0xbc, 0xa0, 0xe1,
	0xa6, 0x72, 0x22, 0xa5, 0x4c, 0x79, 0x41, 0xb8, 0x0f, 0xd1, 0x82, 0xb7, 0x6e, 0xa0, 0xdc, 0xad,
	0x46, 0x50, 0xa6, 0xa9, 0x1d, 0x5a, 0xb5, 0xbb, 0xfd, 0x7a, 0xdd, 0x7e, 0x17, 0xdf, 0x3e, 0xc4,
	0x4d, 0xbf, 0x67, 0x7d, 0xbf, 0x78, 0x0d, 0xf1, 0x03, 0x55, 0xed, 0x15, 0xe3, 0xc1, 0xd8, 0xde,
	0xa3, 0x73, 0xf3, 0x7b, 0xc9, 0x3f, 0x97, 0x6d, 0xe0, 0x1d, 0x6c, 0x1b, 0x42, 0xb3, 0x00, 0x1e,
	0x39, 0x18, 0xd6, 0x34, 0x6e, 0xca, 0x3d, 0xf4, 0x0d, 0x65, 0xa2, 0x3f, 0xc5, 0x81, 0xb1, 0x87,
	0x73, 0x73, 0x1e, 0x61, 0x60, 0x38, 0x7a, 0x3a, 0x1c, 0x39, 0x40, 0x7f, 0x56, 0x75, 0x92, 0x5e,
	0x7a, 0xea, 0x6f, 0xbc, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x42, 0x01, 0xef, 0xdf, 0xa2, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUserById(ctx context.Context, in *UserByIdRequest, opts ...grpc.CallOption) (*User, error)
	GetUserByUuid(ctx context.Context, in *UserByUuidRequest, opts ...grpc.CallOption) (*User, error)
	GetUserByEmail(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error)
	GetUserByNectar(ctx context.Context, in *UserByNectarRequest, opts ...grpc.CallOption) (*User, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUserById(ctx context.Context, in *UserByIdRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetUserById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByUuid(ctx context.Context, in *UserByUuidRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetUserByUuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByEmail(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetUserByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByNectar(ctx context.Context, in *UserByNectarRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userservice.UserService/GetUserByNectar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUserById(context.Context, *UserByIdRequest) (*User, error)
	GetUserByUuid(context.Context, *UserByUuidRequest) (*User, error)
	GetUserByEmail(context.Context, *UserByEmailRequest) (*User, error)
	GetUserByNectar(context.Context, *UserByNectarRequest) (*User, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetUserById(ctx context.Context, req *UserByIdRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserById not implemented")
}
func (*UnimplementedUserServiceServer) GetUserByUuid(ctx context.Context, req *UserByUuidRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByUuid not implemented")
}
func (*UnimplementedUserServiceServer) GetUserByEmail(ctx context.Context, req *UserByEmailRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByEmail not implemented")
}
func (*UnimplementedUserServiceServer) GetUserByNectar(ctx context.Context, req *UserByNectarRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByNectar not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUserById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetUserById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserById(ctx, req.(*UserByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByUuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByUuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByUuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetUserByUuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByUuid(ctx, req.(*UserByUuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetUserByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByEmail(ctx, req.(*UserByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByNectar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByNectarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByNectar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userservice.UserService/GetUserByNectar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByNectar(ctx, req.(*UserByNectarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userservice.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserById",
			Handler:    _UserService_GetUserById_Handler,
		},
		{
			MethodName: "GetUserByUuid",
			Handler:    _UserService_GetUserByUuid_Handler,
		},
		{
			MethodName: "GetUserByEmail",
			Handler:    _UserService_GetUserByEmail_Handler,
		},
		{
			MethodName: "GetUserByNectar",
			Handler:    _UserService_GetUserByNectar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userservice.proto",
}
